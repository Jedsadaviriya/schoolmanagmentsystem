{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Janjao/OneDrive%20-%20bwd%20365/Dokumente/GitHub/schoolmanagmentsystem/src/app/api/modules/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { connectToDatabase } from \"@/lib/mongodb\";\r\nimport { ObjectId } from \"mongodb\";\r\n\r\n// GET: Fetch all modules\r\nexport async function GET() {\r\n  try {\r\n    const { db } = await connectToDatabase();\r\n    const modules = await db.collection(\"modules\").find({}).toArray();\r\n\r\n    return NextResponse.json({ success: true, modules });\r\n  } catch (error) {\r\n    console.error(\"Error fetching modules:\", error);\r\n    return NextResponse.json(\r\n      { success: false, error: \"Fehler beim Laden der Module\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// POST: Create a new module\r\nexport async function POST(request) {\r\n  try {\r\n    const body = await request.json();\r\n    const {\r\n      title,\r\n      module_number,\r\n      description,\r\n      instructor,\r\n      semester,\r\n      credits,\r\n      status,\r\n    } = body;\r\n\r\n    if (!title || !module_number) {\r\n      return NextResponse.json(\r\n        { success: false, error: \"Titel und Modulnummer sind erforderlich\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const newModule = {\r\n      title,\r\n      module_number,\r\n      description: description || \"\",\r\n      instructor: instructor || \"\",\r\n      semester: semester || \"\",\r\n      credits: credits || \"\",\r\n      status: status || \"Aktiv\",\r\n      events: [],\r\n    };\r\n\r\n    const { db } = await connectToDatabase();\r\n    const result = await db.collection(\"modules\").insertOne(newModule);\r\n\r\n    return NextResponse.json(\r\n      { success: true, id: result.insertedId.toString() },\r\n      { status: 201 }\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Error creating module:\", error);\r\n    return NextResponse.json(\r\n      { success: false, error: \"Fehler beim Erstellen des Moduls\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAEA;;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;QACrB,MAAM,UAAU,MAAM,GAAG,UAAU,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,OAAO;QAE/D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAQ;IACpD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAA+B,GACxD;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EACJ,KAAK,EACL,aAAa,EACb,WAAW,EACX,UAAU,EACV,QAAQ,EACR,OAAO,EACP,MAAM,EACP,GAAG;QAEJ,IAAI,CAAC,SAAS,CAAC,eAAe;YAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAA0C,GACnE;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,YAAY;YAChB;YACA;YACA,aAAa,eAAe;YAC5B,YAAY,cAAc;YAC1B,UAAU,YAAY;YACtB,SAAS,WAAW;YACpB,QAAQ,UAAU;YAClB,QAAQ,EAAE;QACZ;QAEA,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;QACrB,MAAM,SAAS,MAAM,GAAG,UAAU,CAAC,WAAW,SAAS,CAAC;QAExD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAM,IAAI,OAAO,UAAU,CAAC,QAAQ;QAAG,GAClD;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAmC,GAC5D;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}