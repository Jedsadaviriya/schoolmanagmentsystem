{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/noten/page.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"averageValue\": \"page-module__ANWkCW__averageValue\",\n  \"cancelButton\": \"page-module__ANWkCW__cancelButton\",\n  \"confirmButton\": \"page-module__ANWkCW__confirmButton\",\n  \"container\": \"page-module__ANWkCW__container\",\n  \"deleteButton\": \"page-module__ANWkCW__deleteButton\",\n  \"distributionBar\": \"page-module__ANWkCW__distributionBar\",\n  \"distributionBarFill\": \"page-module__ANWkCW__distributionBarFill\",\n  \"distributionCount\": \"page-module__ANWkCW__distributionCount\",\n  \"distributionGrid\": \"page-module__ANWkCW__distributionGrid\",\n  \"distributionItem\": \"page-module__ANWkCW__distributionItem\",\n  \"distributionLabel\": \"page-module__ANWkCW__distributionLabel\",\n  \"emptyMessage\": \"page-module__ANWkCW__emptyMessage\",\n  \"error\": \"page-module__ANWkCW__error\",\n  \"excellent\": \"page-module__ANWkCW__excellent\",\n  \"fadeOut\": \"page-module__ANWkCW__fadeOut\",\n  \"fieldError\": \"page-module__ANWkCW__fieldError\",\n  \"fieldErrorIcon\": \"page-module__ANWkCW__fieldErrorIcon\",\n  \"form\": \"page-module__ANWkCW__form\",\n  \"formGroup\": \"page-module__ANWkCW__formGroup\",\n  \"formSection\": \"page-module__ANWkCW__formSection\",\n  \"good\": \"page-module__ANWkCW__good\",\n  \"gradeActions\": \"page-module__ANWkCW__gradeActions\",\n  \"gradeDate\": \"page-module__ANWkCW__gradeDate\",\n  \"gradeExcellent\": \"page-module__ANWkCW__gradeExcellent\",\n  \"gradeGood\": \"page-module__ANWkCW__gradeGood\",\n  \"gradeInfo\": \"page-module__ANWkCW__gradeInfo\",\n  \"gradeInsufficient\": \"page-module__ANWkCW__gradeInsufficient\",\n  \"gradeItem\": \"page-module__ANWkCW__gradeItem\",\n  \"gradeSatisfactory\": \"page-module__ANWkCW__gradeSatisfactory\",\n  \"gradeSubject\": \"page-module__ANWkCW__gradeSubject\",\n  \"gradeValue\": \"page-module__ANWkCW__gradeValue\",\n  \"gradesList\": \"page-module__ANWkCW__gradesList\",\n  \"gradesSection\": \"page-module__ANWkCW__gradesSection\",\n  \"input\": \"page-module__ANWkCW__input\",\n  \"insufficient\": \"page-module__ANWkCW__insufficient\",\n  \"label\": \"page-module__ANWkCW__label\",\n  \"modal\": \"page-module__ANWkCW__modal\",\n  \"modalActions\": \"page-module__ANWkCW__modalActions\",\n  \"modalContent\": \"page-module__ANWkCW__modalContent\",\n  \"modalOverlay\": \"page-module__ANWkCW__modalOverlay\",\n  \"modalTitle\": \"page-module__ANWkCW__modalTitle\",\n  \"notification\": \"page-module__ANWkCW__notification\",\n  \"notificationContainer\": \"page-module__ANWkCW__notificationContainer\",\n  \"notificationContent\": \"page-module__ANWkCW__notificationContent\",\n  \"notificationError\": \"page-module__ANWkCW__notificationError\",\n  \"notificationIcon\": \"page-module__ANWkCW__notificationIcon\",\n  \"notificationMessage\": \"page-module__ANWkCW__notificationMessage\",\n  \"notificationSuccess\": \"page-module__ANWkCW__notificationSuccess\",\n  \"notificationTitle\": \"page-module__ANWkCW__notificationTitle\",\n  \"pageDescription\": \"page-module__ANWkCW__pageDescription\",\n  \"pageTitle\": \"page-module__ANWkCW__pageTitle\",\n  \"satisfactory\": \"page-module__ANWkCW__satisfactory\",\n  \"sectionTitle\": \"page-module__ANWkCW__sectionTitle\",\n  \"slideIn\": \"page-module__ANWkCW__slideIn\",\n  \"statisticsCard\": \"page-module__ANWkCW__statisticsCard\",\n  \"statisticsFooter\": \"page-module__ANWkCW__statisticsFooter\",\n  \"statisticsGrid\": \"page-module__ANWkCW__statisticsGrid\",\n  \"statisticsHeader\": \"page-module__ANWkCW__statisticsHeader\",\n  \"statisticsIcon\": \"page-module__ANWkCW__statisticsIcon\",\n  \"statisticsSection\": \"page-module__ANWkCW__statisticsSection\",\n  \"statisticsTitle\": \"page-module__ANWkCW__statisticsTitle\",\n  \"subjectAverage\": \"page-module__ANWkCW__subjectAverage\",\n  \"subjectAverages\": \"page-module__ANWkCW__subjectAverages\",\n  \"subjectCard\": \"page-module__ANWkCW__subjectCard\",\n  \"subjectCount\": \"page-module__ANWkCW__subjectCount\",\n  \"subjectGrid\": \"page-module__ANWkCW__subjectGrid\",\n  \"subjectName\": \"page-module__ANWkCW__subjectName\",\n  \"submitButton\": \"page-module__ANWkCW__submitButton\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/loris/OneDrive/Dokumente/GitHub/schoolmanagmentsystem/src/app/noten/page.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport styles from \"./page.module.css\"\r\n\r\nexport default function Noten() {\r\n  const [grades, setGrades] = useState([])\r\n  const [subject, setSubject] = useState(\"\")\r\n  const [grade, setGrade] = useState(\"\")\r\n  const [notifications, setNotifications] = useState([])\r\n  const [errors, setErrors] = useState({\r\n    subject: \"\",\r\n    grade: \"\",\r\n  })\r\n  const [deleteConfirmation, setDeleteConfirmation] = useState({\r\n    show: false,\r\n    gradeId: null,\r\n  })\r\n\r\n  // Fetch grades when the component mounts\r\n  useEffect(() => {\r\n    async function fetchGrades() {\r\n      try {\r\n        const res = await fetch(\"/api/grades\")\r\n        const data = await res.json()\r\n        if (data.success) {\r\n          setGrades(data.grades)\r\n        } else {\r\n          showNotification(\"error\", \"Fehler beim Laden\", \"Die Noten konnten nicht geladen werden.\")\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching grades:\", error)\r\n        showNotification(\"error\", \"Verbindungsfehler\", \"Es konnte keine Verbindung zum Server hergestellt werden.\")\r\n      }\r\n    }\r\n    fetchGrades()\r\n  }, [])\r\n\r\n  // Function to show notifications\r\n  const showNotification = (type, title, message) => {\r\n    const id = Date.now()\r\n    setNotifications((prev) => [...prev, { id, type, title, message }])\r\n\r\n    // Auto-remove notification after 3 seconds\r\n    setTimeout(() => {\r\n      setNotifications((prev) => prev.filter((notification) => notification.id !== id))\r\n    }, 3000)\r\n  }\r\n\r\n  // Calculate grade average\r\n  const calculateAverage = () => {\r\n    if (grades.length === 0) return 0\r\n\r\n    const sum = grades.reduce((total, grade) => {\r\n      const gradeValue = Number.parseFloat(grade.grade)\r\n      return isNaN(gradeValue) ? total : total + gradeValue\r\n    }, 0)\r\n\r\n    return sum / grades.length\r\n  }\r\n\r\n  // Calculate average per subject\r\n  const calculateSubjectAverages = () => {\r\n    const subjects = {}\r\n\r\n    grades.forEach((grade) => {\r\n      const subjectName = grade.subject\r\n      const gradeValue = Number.parseFloat(grade.grade)\r\n\r\n      if (!subjects[subjectName]) {\r\n        subjects[subjectName] = {\r\n          total: gradeValue,\r\n          count: 1,\r\n        }\r\n      } else {\r\n        subjects[subjectName].total += gradeValue\r\n        subjects[subjectName].count += 1\r\n      }\r\n    })\r\n\r\n    const averages = Object.keys(subjects).map((subject) => ({\r\n      subject,\r\n      average: subjects[subject].total / subjects[subject].count,\r\n      count: subjects[subject].count,\r\n    }))\r\n\r\n    return averages\r\n  }\r\n\r\n  // Get grade distribution\r\n  const getGradeDistribution = () => {\r\n    const distribution = {\r\n      excellent: 0, // 5.5 - 6.0\r\n      good: 0, // 4.5 - 5.4\r\n      satisfactory: 0, // 4.0 - 4.4\r\n      insufficient: 0, // < 4.0\r\n    }\r\n\r\n    grades.forEach((grade) => {\r\n      const value = Number.parseFloat(grade.grade)\r\n      if (value >= 5.5) distribution.excellent++\r\n      else if (value >= 4.5) distribution.good++\r\n      else if (value >= 4.0) distribution.satisfactory++\r\n      else distribution.insufficient++\r\n    })\r\n\r\n    return distribution\r\n  }\r\n\r\n  // Validate form inputs\r\n  const validateInputs = () => {\r\n    let isValid = true\r\n    const newErrors = { subject: \"\", grade: \"\" }\r\n\r\n    if (!subject.trim()) {\r\n      newErrors.subject = \"Bitte gib ein Fach ein\"\r\n      isValid = false\r\n    }\r\n\r\n    if (!grade) {\r\n      newErrors.grade = \"Bitte gib eine Note ein\"\r\n      isValid = false\r\n    } else {\r\n      const gradeValue = Number.parseFloat(grade)\r\n      if (isNaN(gradeValue) || gradeValue < 1 || gradeValue > 6) {\r\n        newErrors.grade = \"Die Note muss zwischen 1 und 6 liegen\"\r\n        isValid = false\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return isValid\r\n  }\r\n\r\n  // Handle form submission to save a new grade\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!validateInputs()) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\"/api/grades\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ subject, grade: Number.parseFloat(grade) }),\r\n      })\r\n\r\n      const data = await res.json()\r\n\r\n      if (data.success) {\r\n        const newGrade = {\r\n          _id: data.id,\r\n          subject,\r\n          grade: Number.parseFloat(grade),\r\n          createdAt: new Date().toISOString(),\r\n        }\r\n        setGrades([...grades, newGrade])\r\n        setSubject(\"\")\r\n        setGrade(\"\")\r\n        showNotification(\"success\", \"Note gespeichert\", `Die Note f√ºr ${subject} wurde erfolgreich gespeichert.`)\r\n      } else {\r\n        showNotification(\"error\", \"Fehler beim Speichern\", data.error || \"Die Note konnte nicht gespeichert werden.\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving grade:\", error)\r\n      showNotification(\"error\", \"Verbindungsfehler\", \"Es konnte keine Verbindung zum Server hergestellt werden.\")\r\n    }\r\n  }\r\n\r\n  // Handle grade deletion\r\n  const handleDeleteGrade = async (id) => {\r\n    try {\r\n      const res = await fetch(`/api/grades/${id}`, {\r\n        method: \"DELETE\",\r\n      })\r\n\r\n      const data = await res.json()\r\n\r\n      if (data.success) {\r\n        setGrades(grades.filter((grade) => grade._id !== id))\r\n        showNotification(\"success\", \"Note gel√∂scht\", \"Die Note wurde erfolgreich gel√∂scht.\")\r\n      } else {\r\n        showNotification(\"error\", \"Fehler beim L√∂schen\", data.error || \"Die Note konnte nicht gel√∂scht werden.\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting grade:\", error)\r\n      showNotification(\"error\", \"Verbindungsfehler\", \"Es konnte keine Verbindung zum Server hergestellt werden.\")\r\n    } finally {\r\n      setDeleteConfirmation({ show: false, gradeId: null })\r\n    }\r\n  }\r\n\r\n  // Show delete confirmation modal\r\n  const confirmDelete = (id) => {\r\n    setDeleteConfirmation({ show: true, gradeId: id })\r\n  }\r\n\r\n  // Calculate the average grade\r\n  const average = calculateAverage()\r\n  const distribution = getGradeDistribution()\r\n  const subjectAverages = calculateSubjectAverages()\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.pageTitle}>Noten</h1>\r\n      <p className={styles.pageDescription}>\r\n        Hier kannst du deine Noten eintragen und deinen Notendurchschnitt berechnen.\r\n      </p>\r\n\r\n      {/* Notification system */}\r\n      <div className={styles.notificationContainer}>\r\n        {notifications.map((notification) => (\r\n          <div\r\n            key={notification.id}\r\n            className={`${styles.notification} ${notification.type === \"success\" ? styles.notificationSuccess : styles.notificationError}`}\r\n          >\r\n            <div className={styles.notificationIcon}>\r\n              {notification.type === \"success\" ? (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n                  <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n                </svg>\r\n              ) : (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                  <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n                  <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n                </svg>\r\n              )}\r\n            </div>\r\n            <div className={styles.notificationContent}>\r\n              <div className={styles.notificationTitle}>{notification.title}</div>\r\n              <div className={styles.notificationMessage}>{notification.message}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      {deleteConfirmation.show && (\r\n        <div className={styles.modalOverlay}>\r\n          <div className={styles.modal}>\r\n            <h3 className={styles.modalTitle}>Note l√∂schen</h3>\r\n            <p className={styles.modalContent}>\r\n              Bist du sicher, dass du diese Note l√∂schen m√∂chtest? Diese Aktion kann nicht r√ºckg√§ngig gemacht werden.\r\n            </p>\r\n            <div className={styles.modalActions}>\r\n              <button\r\n                className={styles.cancelButton}\r\n                onClick={() => setDeleteConfirmation({ show: false, gradeId: null })}\r\n              >\r\n                Abbrechen\r\n              </button>\r\n              <button className={styles.confirmButton} onClick={() => handleDeleteGrade(deleteConfirmation.gradeId)}>\r\n                L√∂schen\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Grade Statistics */}\r\n      <div className={styles.statisticsSection}>\r\n        <h2 className={styles.sectionTitle}>Notenstatistik</h2>\r\n        <div className={styles.statisticsGrid}>\r\n          <div className={styles.statisticsCard}>\r\n            <div className={styles.statisticsHeader}>\r\n              <div className={styles.statisticsIcon}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <path d=\"m16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z\"></path>\r\n                  <path d=\"m2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z\"></path>\r\n                  <path d=\"M7 21h10\"></path>\r\n                  <path d=\"M12 3v18\"></path>\r\n                  <path d=\"M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2\"></path>\r\n                </svg>\r\n              </div>\r\n              <div className={styles.statisticsTitle}>Notendurchschnitt</div>\r\n            </div>\r\n            <div className={styles.averageValue} data-grade={getGradeCategory(average)}>\r\n              {average.toFixed(2)}\r\n            </div>\r\n            <div className={styles.statisticsFooter}>\r\n              Basierend auf {grades.length} {grades.length === 1 ? \"Note\" : \"Noten\"}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.statisticsCard}>\r\n            <div className={styles.statisticsHeader}>\r\n              <div className={styles.statisticsIcon}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <path d=\"M3 3v18h18\"></path>\r\n                  <path d=\"M18 17V9\"></path>\r\n                  <path d=\"M13 17V5\"></path>\r\n                  <path d=\"M8 17v-3\"></path>\r\n                </svg>\r\n              </div>\r\n              <div className={styles.statisticsTitle}>Notenverteilung</div>\r\n            </div>\r\n            <div className={styles.distributionGrid}>\r\n              <div className={styles.distributionItem}>\r\n                <div className={styles.distributionLabel}>Sehr gut</div>\r\n                <div className={styles.distributionBar}>\r\n                  <div\r\n                    className={`${styles.distributionBarFill} ${styles.excellent}`}\r\n                    style={{ width: grades.length ? `${(distribution.excellent / grades.length) * 100}%` : \"0%\" }}\r\n                  ></div>\r\n                </div>\r\n                <div className={styles.distributionCount}>{distribution.excellent}</div>\r\n              </div>\r\n              <div className={styles.distributionItem}>\r\n                <div className={styles.distributionLabel}>Gut</div>\r\n                <div className={styles.distributionBar}>\r\n                  <div\r\n                    className={`${styles.distributionBarFill} ${styles.good}`}\r\n                    style={{ width: grades.length ? `${(distribution.good / grades.length) * 100}%` : \"0%\" }}\r\n                  ></div>\r\n                </div>\r\n                <div className={styles.distributionCount}>{distribution.good}</div>\r\n              </div>\r\n              <div className={styles.distributionItem}>\r\n                <div className={styles.distributionLabel}>Gen√ºgend</div>\r\n                <div className={styles.distributionBar}>\r\n                  <div\r\n                    className={`${styles.distributionBarFill} ${styles.satisfactory}`}\r\n                    style={{ width: grades.length ? `${(distribution.satisfactory / grades.length) * 100}%` : \"0%\" }}\r\n                  ></div>\r\n                </div>\r\n                <div className={styles.distributionCount}>{distribution.satisfactory}</div>\r\n              </div>\r\n              <div className={styles.distributionItem}>\r\n                <div className={styles.distributionLabel}>Ungen√ºgend</div>\r\n                <div className={styles.distributionBar}>\r\n                  <div\r\n                    className={`${styles.distributionBarFill} ${styles.insufficient}`}\r\n                    style={{ width: grades.length ? `${(distribution.insufficient / grades.length) * 100}%` : \"0%\" }}\r\n                  ></div>\r\n                </div>\r\n                <div className={styles.distributionCount}>{distribution.insufficient}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Subject Averages */}\r\n      {subjectAverages.length > 0 && (\r\n        <div className={styles.subjectAverages}>\r\n          <h2 className={styles.sectionTitle}>Durchschnitt pro Fach</h2>\r\n          <div className={styles.subjectGrid}>\r\n            {subjectAverages.map((item, index) => (\r\n              <div key={index} className={styles.subjectCard}>\r\n                <div className={styles.subjectName}>{item.subject}</div>\r\n                <div className={styles.subjectAverage} style={{ color: getGradeColor(item.average) }}>\r\n                  {item.average.toFixed(2)}\r\n                </div>\r\n                <div className={styles.subjectCount}>\r\n                  {item.count} {item.count === 1 ? \"Note\" : \"Noten\"}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Form to add a new grade */}\r\n      <div className={styles.formSection}>\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <div className={styles.formGroup}>\r\n            <label htmlFor=\"subject\" className={styles.label}>\r\n              Fach:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"subject\"\r\n              value={subject}\r\n              onChange={(e) => setSubject(e.target.value)}\r\n              className={`${styles.input} ${errors.subject ? styles.error : \"\"}`}\r\n              placeholder=\"z.B. Mathematik\"\r\n            />\r\n            {errors.subject && (\r\n              <div className={styles.fieldError}>\r\n                <span className={styles.fieldErrorIcon}>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                    <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n                    <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n                  </svg>\r\n                </span>\r\n                {errors.subject}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label htmlFor=\"grade\" className={styles.label}>\r\n              Note:\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"grade\"\r\n              value={grade}\r\n              onChange={(e) => setGrade(e.target.value)}\r\n              className={`${styles.input} ${errors.grade ? styles.error : \"\"}`}\r\n              min=\"1\"\r\n              max=\"6\"\r\n              step=\"0.1\"\r\n              placeholder=\"1.0 - 6.0\"\r\n            />\r\n            {errors.grade && (\r\n              <div className={styles.fieldError}>\r\n                <span className={styles.fieldErrorIcon}>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                    <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n                    <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n                  </svg>\r\n                </span>\r\n                {errors.grade}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <button type=\"submit\" className={styles.submitButton}>\r\n            Note speichern\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Display saved grades */}\r\n      <div className={styles.gradesSection}>\r\n        <h2 className={styles.sectionTitle}>Gespeicherte Noten</h2>\r\n        {grades.length > 0 ? (\r\n          <div className={styles.gradesList}>\r\n            {grades.map((entry) => (\r\n              <div key={entry._id} className={styles.gradeItem}>\r\n                <div className={styles.gradeInfo}>\r\n                  <span className={styles.gradeSubject}>{entry.subject}</span>\r\n                  <div className={styles.gradeDate}>\r\n                    Eingetragen am: {new Date(entry.createdAt).toLocaleDateString()}\r\n                  </div>\r\n                </div>\r\n                <span className={`${styles.gradeValue} ${getGradeValueClass(Number.parseFloat(entry.grade))}`}>\r\n                  {Number.parseFloat(entry.grade).toFixed(1)}\r\n                </span>\r\n                <div className={styles.gradeActions}>\r\n                  <button\r\n                    className={styles.deleteButton}\r\n                    onClick={() => confirmDelete(entry._id)}\r\n                    aria-label=\"Note l√∂schen\"\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path d=\"M3 6h18\"></path>\r\n                      <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\r\n                      <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\r\n                      <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\r\n                      <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className={styles.emptyMessage}>Keine Noten vorhanden. F√ºge deine erste Note hinzu!</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Helper function to determine grade category for styling\r\nfunction getGradeCategory(grade) {\r\n  if (grade >= 5.5) return \"excellent\"\r\n  if (grade >= 4.5) return \"good\"\r\n  if (grade >= 4.0) return \"satisfactory\"\r\n  return \"insufficient\"\r\n}\r\n\r\n// Helper function to get class name for grade value\r\nfunction getGradeValueClass(grade) {\r\n  if (grade >= 5.5) return styles.gradeExcellent\r\n  if (grade >= 4.5) return styles.gradeGood\r\n  if (grade >= 4.0) return styles.gradeSatisfactory\r\n  return styles.gradeInsufficient\r\n}\r\n\r\n// Helper function to get color for grade value\r\nfunction getGradeColor(grade) {\r\n  if (grade >= 5.5) return \"var(--color-success-600)\"\r\n  if (grade >= 4.5) return \"var(--color-secondary-600)\"\r\n  if (grade >= 4.0) return \"var(--color-warning-600)\"\r\n  return \"var(--color-danger-600)\"\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}