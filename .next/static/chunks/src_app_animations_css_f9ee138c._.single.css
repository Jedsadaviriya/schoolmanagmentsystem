/* [project]/src/app/animations.css [app-client] (css) */
:root {
  --animation-easing-standard: cubic-bezier(.4, 0, .2, 1);
  --animation-easing-decelerate: cubic-bezier(0, 0, .2, 1);
  --animation-easing-accelerate: cubic-bezier(.4, 0, 1, 1);
  --animation-easing-spring: cubic-bezier(.34, 1.56, .64, 1);
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }

  to {
    opacity: 0;
    transform: translateY(-10px);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(.8);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: scale(1);
  }

  to {
    opacity: 0;
    transform: scale(.8);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(100%);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideOutRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }

  to {
    opacity: 0;
    transform: translateX(100%);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-100%);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideOutLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }

  to {
    opacity: 0;
    transform: translateX(-100%);
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(100%);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideOutUp {
  from {
    opacity: 1;
    transform: translateY(0);
  }

  to {
    opacity: 0;
    transform: translateY(-100%);
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-100%);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideOutDown {
  from {
    opacity: 1;
    transform: translateY(0);
  }

  to {
    opacity: 0;
    transform: translateY(100%);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0);
  }

  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.05);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }

  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-5px);
  }

  20%, 40%, 60%, 80% {
    transform: translateX(5px);
  }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }

  40% {
    transform: translateY(-20px);
  }

  60% {
    transform: translateY(-10px);
  }
}

.animate-fade-in {
  animation: fadeIn .3s var(--animation-easing-decelerate) forwards;
}

.animate-fade-out {
  animation: fadeOut .3s var(--animation-easing-accelerate) forwards;
}

.animate-scale-in {
  animation: scaleIn .3s var(--animation-easing-spring) forwards;
}

.animate-scale-out {
  animation: scaleOut .3s var(--animation-easing-accelerate) forwards;
}

.animate-slide-in-right {
  animation: slideInRight .3s var(--animation-easing-decelerate) forwards;
}

.animate-slide-out-right {
  animation: slideOutRight .3s var(--animation-easing-accelerate) forwards;
}

.animate-slide-in-left {
  animation: slideInLeft .3s var(--animation-easing-decelerate) forwards;
}

.animate-slide-out-left {
  animation: slideOutLeft .3s var(--animation-easing-accelerate) forwards;
}

.animate-slide-in-up {
  animation: slideInUp .3s var(--animation-easing-decelerate) forwards;
}

.animate-slide-out-up {
  animation: slideOutUp .3s var(--animation-easing-accelerate) forwards;
}

.animate-slide-in-down {
  animation: slideInDown .3s var(--animation-easing-decelerate) forwards;
}

.animate-slide-out-down {
  animation: slideOutDown .3s var(--animation-easing-accelerate) forwards;
}

.animate-rotate {
  animation: 2s linear infinite rotate;
}

.animate-pulse {
  animation: 2s ease-in-out infinite pulse;
}

.animate-shake {
  animation: .5s ease-in-out shake;
}

.animate-bounce {
  animation: 1s ease-in-out bounce;
}

.transition-all {
  transition: all .3s var(--animation-easing-standard);
}

.transition-transform {
  transition: transform .3s var(--animation-easing-standard);
}

.transition-opacity {
  transition: opacity .3s var(--animation-easing-standard);
}

.transition-colors {
  transition: background-color .3s var(--animation-easing-standard), color .3s var(--animation-easing-standard), border-color .3s var(--animation-easing-standard);
}

.hover-scale:hover {
  transform: scale(1.05);
}

.hover-lift:hover {
  transform: translateY(-5px);
}

.hover-rotate:hover {
  transform: rotate(5deg);
}

.hover-brighten:hover {
  filter: brightness(1.1);
}

.delay-100 {
  animation-delay: .1s;
}

.delay-200 {
  animation-delay: .2s;
}

.delay-300 {
  animation-delay: .3s;
}

.delay-400 {
  animation-delay: .4s;
}

.delay-500 {
  animation-delay: .5s;
}

.duration-300 {
  animation-duration: .3s;
}

.duration-500 {
  animation-duration: .5s;
}

.duration-700 {
  animation-duration: .7s;
}

.duration-1000 {
  animation-duration: 1s;
}

.shimmer {
  position: relative;
  overflow: hidden;
}

.shimmer:after {
  content: "";
  background-image: linear-gradient(90deg, #fff0 0, #fff3 20%, #ffffff80 60%, #fff0);
  animation: 2s infinite shimmer;
  position: absolute;
  inset: 0;
  transform: translateX(-100%);
}

@keyframes shimmer {
  100% {
    transform: translateX(100%);
  }
}

.btn-pulse {
  position: relative;
}

.btn-pulse:after {
  content: "";
  border-radius: inherit;
  box-shadow: 0 0 0 0 rgba(var(--color-secondary-500-rgb), .7);
  animation: 1.5s infinite pulse-shadow;
  position: absolute;
  inset: 0;
}

@keyframes pulse-shadow {
  0% {
    box-shadow: 0 0 0 0 rgba(var(--color-secondary-500-rgb), .7);
  }

  70% {
    box-shadow: 0 0 0 10px rgba(var(--color-secondary-500-rgb), 0);
  }

  100% {
    box-shadow: 0 0 0 0 rgba(var(--color-secondary-500-rgb), 0);
  }
}

.typewriter {
  border-right: 2px solid var(--color-primary-500);
  white-space: nowrap;
  margin: 0 auto;
  animation: 3.5s steps(40, end) typing, .75s step-end infinite blink-caret;
  overflow: hidden;
}

@keyframes typing {
  from {
    width: 0;
  }

  to {
    width: 100%;
  }
}

@keyframes blink-caret {
  from, to {
    border-color: #0000;
  }

  50% {
    border-color: var(--color-primary-500);
  }
}

/*# sourceMappingURL=src_app_animations_css_f9ee138c._.single.css.map*/