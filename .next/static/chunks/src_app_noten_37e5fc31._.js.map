{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/noten/page.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"animate\": \"page-module__ANWkCW__animate\",\n  \"animateStats\": \"page-module__ANWkCW__animateStats\",\n  \"averageCard\": \"page-module__ANWkCW__averageCard\",\n  \"averageValue\": \"page-module__ANWkCW__averageValue\",\n  \"bounce\": \"page-module__ANWkCW__bounce\",\n  \"buttonLoader\": \"page-module__ANWkCW__buttonLoader\",\n  \"container\": \"page-module__ANWkCW__container\",\n  \"countUp\": \"page-module__ANWkCW__countUp\",\n  \"deleteButton\": \"page-module__ANWkCW__deleteButton\",\n  \"distributionBar\": \"page-module__ANWkCW__distributionBar\",\n  \"distributionBarFill\": \"page-module__ANWkCW__distributionBarFill\",\n  \"distributionCard\": \"page-module__ANWkCW__distributionCard\",\n  \"distributionCount\": \"page-module__ANWkCW__distributionCount\",\n  \"distributionGrid\": \"page-module__ANWkCW__distributionGrid\",\n  \"distributionItem\": \"page-module__ANWkCW__distributionItem\",\n  \"distributionLabel\": \"page-module__ANWkCW__distributionLabel\",\n  \"error\": \"page-module__ANWkCW__error\",\n  \"excellent\": \"page-module__ANWkCW__excellent\",\n  \"expandWidth\": \"page-module__ANWkCW__expandWidth\",\n  \"fadeIn\": \"page-module__ANWkCW__fadeIn\",\n  \"fadeInLeft\": \"page-module__ANWkCW__fadeInLeft\",\n  \"fadeInRight\": \"page-module__ANWkCW__fadeInRight\",\n  \"form\": \"page-module__ANWkCW__form\",\n  \"formGroup\": \"page-module__ANWkCW__formGroup\",\n  \"formSection\": \"page-module__ANWkCW__formSection\",\n  \"good\": \"page-module__ANWkCW__good\",\n  \"gradeActions\": \"page-module__ANWkCW__gradeActions\",\n  \"gradeDate\": \"page-module__ANWkCW__gradeDate\",\n  \"gradeExcellent\": \"page-module__ANWkCW__gradeExcellent\",\n  \"gradeGood\": \"page-module__ANWkCW__gradeGood\",\n  \"gradeInfo\": \"page-module__ANWkCW__gradeInfo\",\n  \"gradeInsufficient\": \"page-module__ANWkCW__gradeInsufficient\",\n  \"gradeItem\": \"page-module__ANWkCW__gradeItem\",\n  \"gradeSatisfactory\": \"page-module__ANWkCW__gradeSatisfactory\",\n  \"gradeSubject\": \"page-module__ANWkCW__gradeSubject\",\n  \"gradeValue\": \"page-module__ANWkCW__gradeValue\",\n  \"gradesList\": \"page-module__ANWkCW__gradesList\",\n  \"gradesSection\": \"page-module__ANWkCW__gradesSection\",\n  \"input\": \"page-module__ANWkCW__input\",\n  \"insufficient\": \"page-module__ANWkCW__insufficient\",\n  \"label\": \"page-module__ANWkCW__label\",\n  \"loaded\": \"page-module__ANWkCW__loaded\",\n  \"loaderDot\": \"page-module__ANWkCW__loaderDot\",\n  \"pageDescription\": \"page-module__ANWkCW__pageDescription\",\n  \"pageHeader\": \"page-module__ANWkCW__pageHeader\",\n  \"pageTitle\": \"page-module__ANWkCW__pageTitle\",\n  \"satisfactory\": \"page-module__ANWkCW__satisfactory\",\n  \"sectionTitle\": \"page-module__ANWkCW__sectionTitle\",\n  \"slideIn\": \"page-module__ANWkCW__slideIn\",\n  \"statisticsCard\": \"page-module__ANWkCW__statisticsCard\",\n  \"statisticsFooter\": \"page-module__ANWkCW__statisticsFooter\",\n  \"statisticsGrid\": \"page-module__ANWkCW__statisticsGrid\",\n  \"statisticsHeader\": \"page-module__ANWkCW__statisticsHeader\",\n  \"statisticsIcon\": \"page-module__ANWkCW__statisticsIcon\",\n  \"statisticsSection\": \"page-module__ANWkCW__statisticsSection\",\n  \"statisticsTitle\": \"page-module__ANWkCW__statisticsTitle\",\n  \"submitButton\": \"page-module__ANWkCW__submitButton\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/loris/OneDrive/Dokumente/GitHub/schoolmanagmentsystem/src/app/noten/page.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect, useRef } from \"react\"\r\nimport styles from \"./page.module.css\"\r\nimport LoadingAnimation from \"@/components/loading-animation\"\r\n\r\nexport default function Noten() {\r\n  const [grades, setGrades] = useState([])\r\n  const [subject, setSubject] = useState(\"\")\r\n  const [grade, setGrade] = useState(\"\")\r\n  const [notifications, setNotifications] = useState([])\r\n  const [errors, setErrors] = useState({\r\n    subject: \"\",\r\n    grade: \"\",\r\n  })\r\n  const [deleteConfirmation, setDeleteConfirmation] = useState({\r\n    show: false,\r\n    gradeId: null,\r\n  })\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n  const [pageLoaded, setPageLoaded] = useState(false)\r\n  const [animateStats, setAnimateStats] = useState(false)\r\n\r\n  const statsRef = useRef(null)\r\n\r\n  // Intersection Observer for animations\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            setAnimateStats(true)\r\n            observer.unobserve(entry.target)\r\n          }\r\n        })\r\n      },\r\n      { threshold: 0.2 },\r\n    )\r\n\r\n    if (statsRef.current) {\r\n      observer.observe(statsRef.current)\r\n    }\r\n\r\n    return () => {\r\n      if (statsRef.current) {\r\n        observer.unobserve(statsRef.current)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  // Fetch grades when the component mounts\r\n  useEffect(() => {\r\n    async function fetchGrades() {\r\n      try {\r\n        setIsLoading(true)\r\n        const res = await fetch(\"/api/grades\")\r\n\r\n        // Check if the response is JSON\r\n        const contentType = res.headers.get(\"content-type\")\r\n        if (!contentType || !contentType.includes(\"application/json\")) {\r\n          throw new Error(`Server returned non-JSON response: ${await res.text()}`)\r\n        }\r\n\r\n        const data = await res.json()\r\n        if (data.success) {\r\n          setGrades(data.grades)\r\n        } else {\r\n          showNotification(\"error\", \"Fehler beim Laden\", data.error || \"Die Noten konnten nicht geladen werden.\")\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching grades:\", error)\r\n        showNotification(\"error\", \"Verbindungsfehler\", `Fehler beim Laden: ${error.message}`)\r\n      } finally {\r\n        setIsLoading(false)\r\n        setTimeout(() => {\r\n          setPageLoaded(true)\r\n        }, 300)\r\n      }\r\n    }\r\n    fetchGrades()\r\n  }, [])\r\n\r\n  // Function to show notifications\r\n  const showNotification = (type, title, message) => {\r\n    const id = Date.now()\r\n    setNotifications((prev) => [...prev, { id, type, title, message }])\r\n\r\n    // Auto-remove notification after 3 seconds\r\n    setTimeout(() => {\r\n      setNotifications((prev) => prev.filter((notification) => notification.id !== id))\r\n    }, 3000)\r\n  }\r\n\r\n  // Calculate grade average\r\n  const calculateAverage = () => {\r\n    if (grades.length === 0) return 0\r\n\r\n    const sum = grades.reduce((total, grade) => {\r\n      const gradeValue = Number.parseFloat(grade.grade)\r\n      return isNaN(gradeValue) ? total : total + gradeValue\r\n    }, 0)\r\n\r\n    return sum / grades.length\r\n  }\r\n\r\n  // Calculate average per subject\r\n  const calculateSubjectAverages = () => {\r\n    const subjects = {}\r\n\r\n    grades.forEach((grade) => {\r\n      const subjectName = grade.subject\r\n      const gradeValue = Number.parseFloat(grade.grade)\r\n\r\n      if (!subjects[subjectName]) {\r\n        subjects[subjectName] = {\r\n          total: gradeValue,\r\n          count: 1,\r\n        }\r\n      } else {\r\n        subjects[subjectName].total += gradeValue\r\n        subjects[subjectName].count += 1\r\n      }\r\n    })\r\n\r\n    const averages = Object.keys(subjects).map((subject) => ({\r\n      subject,\r\n      average: subjects[subject].total / subjects[subject].count,\r\n      count: subjects[subject].count,\r\n    }))\r\n\r\n    return averages\r\n  }\r\n\r\n  // Get grade distribution\r\n  const getGradeDistribution = () => {\r\n    const distribution = {\r\n      excellent: 0, // 5.5 - 6.0\r\n      good: 0, // 4.5 - 5.4\r\n      satisfactory: 0, // 4.0 - 4.4\r\n      insufficient: 0, // < 4.0\r\n    }\r\n\r\n    grades.forEach((grade) => {\r\n      const value = Number.parseFloat(grade.grade)\r\n      if (value >= 5.5) distribution.excellent++\r\n      else if (value >= 4.5) distribution.good++\r\n      else if (value >= 4.0) distribution.satisfactory++\r\n      else distribution.insufficient++\r\n    })\r\n\r\n    return distribution\r\n  }\r\n\r\n  // Validate form inputs\r\n  const validateInputs = () => {\r\n    let isValid = true\r\n    const newErrors = { subject: \"\", grade: \"\" }\r\n\r\n    if (!subject.trim()) {\r\n      newErrors.subject = \"Bitte gib ein Fach ein\"\r\n      isValid = false\r\n    }\r\n\r\n    if (!grade) {\r\n      newErrors.grade = \"Bitte gib eine Note ein\"\r\n      isValid = false\r\n    } else {\r\n      const gradeValue = Number.parseFloat(grade)\r\n      if (isNaN(gradeValue) || gradeValue < 1 || gradeValue > 6) {\r\n        newErrors.grade = \"Die Note muss zwischen 1 und 6 liegen\"\r\n        isValid = false\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return isValid\r\n  }\r\n\r\n  // Handle form submission to save a new grade\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!validateInputs()) {\r\n      return\r\n    }\r\n\r\n    setIsSubmitting(true)\r\n    try {\r\n      const res = await fetch(\"/api/grades\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ subject, grade: Number.parseFloat(grade) }),\r\n      })\r\n\r\n      const data = await res.json()\r\n\r\n      if (data.success) {\r\n        const newGrade = {\r\n          _id: data.id,\r\n          subject,\r\n          grade: Number.parseFloat(grade),\r\n          createdAt: new Date().toISOString(),\r\n        }\r\n        setGrades((prevGrades) => [...prevGrades, newGrade])\r\n        setSubject(\"\")\r\n        setGrade(\"\")\r\n        showNotification(\"success\", \"Note gespeichert\", `Die Note für ${subject} wurde erfolgreich gespeichert.`)\r\n      } else {\r\n        showNotification(\"error\", \"Fehler beim Speichern\", data.error || \"Die Note konnte nicht gespeichert werden.\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving grade:\", error)\r\n      showNotification(\"error\", \"Verbindungsfehler\", \"Es konnte keine Verbindung zum Server hergestellt werden.\")\r\n    } finally {\r\n      setIsSubmitting(false)\r\n    }\r\n  }\r\n\r\n  // Handle grade deletion\r\n  const handleDeleteGrade = async (id) => {\r\n    setIsSubmitting(true)\r\n    try {\r\n      // Log the ID being deleted for debugging\r\n      console.log(`Deleting grade with ID: ${id}`)\r\n\r\n      const res = await fetch(`/api/grades/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n\r\n      // Log the response status for debugging\r\n      console.log(`Delete response status: ${res.status}`)\r\n\r\n      // Handle non-JSON responses\r\n      const contentType = res.headers.get(\"content-type\")\r\n      if (!contentType || !contentType.includes(\"application/json\")) {\r\n        throw new Error(`Server returned non-JSON response: ${await res.text()}`)\r\n      }\r\n\r\n      const data = await res.json()\r\n      console.log(\"Delete response data:\", data)\r\n\r\n      if (data.success) {\r\n        // Update the grades state by filtering out the deleted grade\r\n        setGrades((prevGrades) => {\r\n          const updatedGrades = prevGrades.filter((grade) => grade._id !== id)\r\n          return updatedGrades\r\n        })\r\n        showNotification(\"success\", \"Note gelöscht\", \"Die Note wurde erfolgreich gelöscht.\")\r\n      } else {\r\n        showNotification(\"error\", \"Fehler beim Löschen\", data.error || \"Die Note konnte nicht gelöscht werden.\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting grade:\", error)\r\n      showNotification(\"error\", \"Verbindungsfehler\", `Fehler beim Löschen: ${error.message}`)\r\n    } finally {\r\n      setIsSubmitting(false)\r\n      setDeleteConfirmation({ show: false, gradeId: null })\r\n    }\r\n  }\r\n\r\n  // Show delete confirmation modal\r\n  const confirmDelete = (id) => {\r\n    setDeleteConfirmation({ show: true, gradeId: id })\r\n  }\r\n\r\n  // Calculate the average grade\r\n  const average = calculateAverage()\r\n  const distribution = getGradeDistribution()\r\n  const subjectAverages = calculateSubjectAverages()\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingAnimation />}\r\n\r\n      <div className={`${styles.container} ${pageLoaded ? styles.loaded : \"\"}`}>\r\n        <div className={styles.pageHeader}>\r\n          <h1 className={styles.pageTitle}>Noten</h1>\r\n          <p className={styles.pageDescription}>\r\n            Hier kannst du deine Noten eintragen und deinen Notendurchschnitt berechnen.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Notification system */}\r\n        <div className={styles.notificationContainer}>\r\n          {notifications.map((notification) => (\r\n            <div\r\n              key={notification.id}\r\n              className={`${styles.notification} ${notification.type === \"success\" ? styles.notificationSuccess : styles.notificationError}`}\r\n            >\r\n              <div className={styles.notificationIcon}>\r\n                {notification.type === \"success\" ? (\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    className={styles.notificationIconSvg}\r\n                  >\r\n                    <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n                    <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n                  </svg>\r\n                ) : (\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    className={styles.notificationIconSvg}\r\n                  >\r\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                    <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n                    <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n                  </svg>\r\n                )}\r\n              </div>\r\n              <div className={styles.notificationContent}>\r\n                <div className={styles.notificationTitle}>{notification.title}</div>\r\n                <div className={styles.notificationMessage}>{notification.message}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Delete Confirmation Modal */}\r\n        {deleteConfirmation.show && (\r\n          <div className={styles.modalOverlay}>\r\n            <div className={`${styles.modal} ${styles.modalAnimation}`}>\r\n              <h3 className={styles.modalTitle}>Note löschen</h3>\r\n              <p className={styles.modalContent}>\r\n                Bist du sicher, dass du diese Note löschen möchtest? Diese Aktion kann nicht rückgängig gemacht werden.\r\n              </p>\r\n              <div className={styles.modalActions}>\r\n                <button\r\n                  className={`${styles.cancelButton} animated-button`}\r\n                  onClick={() => setDeleteConfirmation({ show: false, gradeId: null })}\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Abbrechen\r\n                </button>\r\n                <button\r\n                  className={`${styles.confirmButton} animated-button`}\r\n                  onClick={() => handleDeleteGrade(deleteConfirmation.gradeId)}\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? (\r\n                    <span className={styles.buttonLoader}>\r\n                      <span className={styles.loaderDot}></span>\r\n                      <span className={styles.loaderDot}></span>\r\n                      <span className={styles.loaderDot}></span>\r\n                    </span>\r\n                  ) : (\r\n                    \"Löschen\"\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Grade Statistics */}\r\n        <div className={`${styles.statisticsSection} ${animateStats ? styles.animateStats : \"\"}`} ref={statsRef}>\r\n          <h2 className={styles.sectionTitle}>Notenstatistik</h2>\r\n          <div className={styles.statisticsGrid}>\r\n            <div className={`${styles.statisticsCard} ${styles.averageCard}`}>\r\n              <div className={styles.statisticsHeader}>\r\n                <div className={styles.statisticsIcon}>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <path d=\"m16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z\"></path>\r\n                    <path d=\"m2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z\"></path>\r\n                    <path d=\"M7 21h10\"></path>\r\n                    <path d=\"M12 3v18\"></path>\r\n                    <path d=\"M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2\"></path>\r\n                  </svg>\r\n                </div>\r\n                <div className={styles.statisticsTitle}>Notendurchschnitt</div>\r\n              </div>\r\n              <div className={`${styles.averageValue} ${styles.countUp}`} data-grade={getGradeCategory(average)}>\r\n                {average.toFixed(2)}\r\n              </div>\r\n              <div className={styles.statisticsFooter}>\r\n                Basierend auf {grades.length} {grades.length === 1 ? \"Note\" : \"Noten\"}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={`${styles.statisticsCard} ${styles.distributionCard}`}>\r\n              <div className={styles.statisticsHeader}>\r\n                <div className={styles.statisticsIcon}>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <path d=\"M3 3v18h18\"></path>\r\n                    <path d=\"M18 17V9\"></path>\r\n                    <path d=\"M13 17V5\"></path>\r\n                    <path d=\"M8 17v-3\"></path>\r\n                  </svg>\r\n                </div>\r\n                <div className={styles.statisticsTitle}>Notenverteilung</div>\r\n              </div>\r\n              <div className={styles.distributionGrid}>\r\n                <div className={styles.distributionItem}>\r\n                  <div className={styles.distributionLabel}>Sehr gut</div>\r\n                  <div className={styles.distributionBar}>\r\n                    <div\r\n                      className={`${styles.distributionBarFill} ${styles.excellent} ${animateStats ? styles.animate : \"\"}`}\r\n                      style={{ width: grades.length ? `${(distribution.excellent / grades.length) * 100}%` : \"0%\" }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className={styles.distributionCount}>{distribution.excellent}</div>\r\n                </div>\r\n                <div className={styles.distributionItem}>\r\n                  <div className={styles.distributionLabel}>Gut</div>\r\n                  <div className={styles.distributionBar}>\r\n                    <div\r\n                      className={`${styles.distributionBarFill} ${styles.good} ${animateStats ? styles.animate : \"\"}`}\r\n                      style={{ width: grades.length ? `${(distribution.good / grades.length) * 100}%` : \"0%\" }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className={styles.distributionCount}>{distribution.good}</div>\r\n                </div>\r\n                <div className={styles.distributionItem}>\r\n                  <div className={styles.distributionLabel}>Genügend</div>\r\n                  <div className={styles.distributionBar}>\r\n                    <div\r\n                      className={`${styles.distributionBarFill} ${styles.satisfactory} ${animateStats ? styles.animate : \"\"}`}\r\n                      style={{ width: grades.length ? `${(distribution.satisfactory / grades.length) * 100}%` : \"0%\" }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className={styles.distributionCount}>{distribution.satisfactory}</div>\r\n                </div>\r\n                <div className={styles.distributionItem}>\r\n                  <div className={styles.distributionLabel}>Ungenügend</div>\r\n                  <div className={styles.distributionBar}>\r\n                    <div\r\n                      className={`${styles.distributionBarFill} ${styles.insufficient} ${animateStats ? styles.animate : \"\"}`}\r\n                      style={{ width: grades.length ? `${(distribution.insufficient / grades.length) * 100}%` : \"0%\" }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className={styles.distributionCount}>{distribution.insufficient}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Subject Averages */}\r\n        {subjectAverages.length > 0 && (\r\n          <div className={`${styles.subjectAverages} ${pageLoaded ? styles.fadeIn : \"\"}`}>\r\n            <h2 className={styles.sectionTitle}>Durchschnitt pro Fach</h2>\r\n            <div className={`${styles.subjectGrid} stagger-animation animate`}>\r\n              {subjectAverages.map((item, index) => (\r\n                <div key={index} className={`${styles.subjectCard} card-hover`}>\r\n                  <div className={styles.subjectName}>{item.subject}</div>\r\n                  <div className={styles.subjectAverage} style={{ color: getGradeColor(item.average) }}>\r\n                    {item.average.toFixed(2)}\r\n                  </div>\r\n                  <div className={styles.subjectCount}>\r\n                    {item.count} {item.count === 1 ? \"Note\" : \"Noten\"}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Form to add a new grade */}\r\n        <div className={`${styles.formSection} ${pageLoaded ? styles.slideIn : \"\"}`}>\r\n          <form onSubmit={handleSubmit} className={styles.form}>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"subject\" className={styles.label}>\r\n                Fach:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setSubject(e.target.value)}\r\n                className={`${styles.input} ${errors.subject ? styles.error : \"\"}`}\r\n                placeholder=\"z.B. Mathematik\"\r\n                disabled={isSubmitting}\r\n              />\r\n              {errors.subject && (\r\n                <div className={styles.fieldError}>\r\n                  <span className={styles.fieldErrorIcon}>\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                      <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n                      <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n                    </svg>\r\n                  </span>\r\n                  {errors.subject}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"grade\" className={styles.label}>\r\n                Note:\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"grade\"\r\n                value={grade}\r\n                onChange={(e) => setGrade(e.target.value)}\r\n                className={`${styles.input} ${errors.grade ? styles.error : \"\"}`}\r\n                min=\"1\"\r\n                max=\"6\"\r\n                step=\"0.1\"\r\n                placeholder=\"1.0 - 6.0\"\r\n                disabled={isSubmitting}\r\n              />\r\n              {errors.grade && (\r\n                <div className={styles.fieldError}>\r\n                  <span className={styles.fieldErrorIcon}>\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                      <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n                      <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n                    </svg>\r\n                  </span>\r\n                  {errors.grade}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <button type=\"submit\" className={`${styles.submitButton} animated-button`} disabled={isSubmitting}>\r\n              {isSubmitting ? (\r\n                <span className={styles.buttonLoader}>\r\n                  <span className={styles.loaderDot}></span>\r\n                  <span className={styles.loaderDot}></span>\r\n                  <span className={styles.loaderDot}></span>\r\n                </span>\r\n              ) : (\r\n                \"Note speichern\"\r\n              )}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Display saved grades */}\r\n        <div className={`${styles.gradesSection} ${pageLoaded ? styles.fadeIn : \"\"}`}>\r\n          <h2 className={styles.sectionTitle}>Gespeicherte Noten</h2>\r\n          {grades.length > 0 ? (\r\n            <div className={`${styles.gradesList} stagger-animation animate`}>\r\n              {grades.map((entry) => (\r\n                <div key={entry._id} className={`${styles.gradeItem} card-hover`}>\r\n                  <div className={styles.gradeInfo}>\r\n                    <span className={styles.gradeSubject}>{entry.subject}</span>\r\n                    <div className={styles.gradeDate}>\r\n                      Eingetragen am: {new Date(entry.createdAt).toLocaleDateString()}\r\n                    </div>\r\n                  </div>\r\n                  <span className={`${styles.gradeValue} ${getGradeValueClass(Number.parseFloat(entry.grade))}`}>\r\n                    {Number.parseFloat(entry.grade).toFixed(1)}\r\n                  </span>\r\n                  <div className={styles.gradeActions}>\r\n                    <button\r\n                      className={styles.deleteButton}\r\n                      onClick={() => confirmDelete(entry._id)}\r\n                      aria-label=\"Note löschen\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      >\r\n                        <path d=\"M3 6h18\"></path>\r\n                        <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\r\n                        <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\r\n                        <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\r\n                        <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className={`${styles.emptyMessage} ${styles.emptyAnimation}`}>\r\n              <div className={styles.emptyIcon}>📝</div>\r\n              <p>Keine Noten vorhanden. Füge deine erste Note hinzu!</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// Helper function to determine grade category for styling\r\nfunction getGradeCategory(grade) {\r\n  if (grade >= 5.5) return \"excellent\"\r\n  if (grade >= 4.5) return \"good\"\r\n  if (grade >= 4.0) return \"satisfactory\"\r\n  return \"insufficient\"\r\n}\r\n\r\n// Helper function to get class name for grade value\r\nfunction getGradeValueClass(grade) {\r\n  if (grade >= 5.5) return styles.gradeExcellent\r\n  if (grade >= 4.5) return styles.gradeGood\r\n  if (grade >= 4.0) return styles.gradeSatisfactory\r\n  return styles.gradeInsufficient\r\n}\r\n\r\n// Helper function to get color for grade value\r\nfunction getGradeColor(grade) {\r\n  if (grade >= 5.5) return \"var(--color-success-600)\"\r\n  if (grade >= 4.5) return \"var(--color-secondary-600)\"\r\n  if (grade >= 4.0) return \"var(--color-warning-600)\"\r\n  return \"var(--color-danger-600)\"\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}